#!/bin/sh
########10########20########30## DOCUMENTATION #50########60########70########80
#
#  OVERVIEW
#  ========
#
#  This tool is intended to check the integrity and performance of hard disks
#  (or more accurately, any file device). This tool will generate a random
#  image from /dev/urandom, store a checksum, then copy the image to the
#  file device and validate the checksum remains unchanged.
#
#  Note that if the file in question already exists on the filesystem to check,
#  it will be overwritten.
#
#  If the requested image file size exceeds the maximum size of your /tmp, 
#  then you may experience unexpected behaviour.
#
#  USAGE
#  =====
#
#  $1 . . . . Path to the file device to test.
#
#  $2 . . . . (optional) multiple of 1MB file size to use (default is 1024).
#
########10########20########30##### LICENSE ####50########60########70########80
#
# Copyright (c) 2017, Charles Daniels
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
########10########20########30########40########50########60########70########80

# constants
FILE=`date | md5`.img
TMP_FILE=/tmp/$FILE
COUNT="1024"

# validate arguments
if [ $# -eq 2 ] ; then
	COUNT=$2
elif [ $# -eq 1 ] ; then
	# do nothing
	printf ""
else
	echo "FATAL: incorrect arguments."
	toolchest-doc $0
	exit 1
fi

if [ ! -d "$1" ] ; then
	echo "FATAL: output directory '$1' does not exist, or not a dir!"
	exit 1
fi

# show status to the user
echo "INFO: temporary image file is: $TMP_FILE"
echo "INFO: using image file size of $COUNT m"

# generate the temp file
printf "INFO: writing data to file... "
dd if=/dev/urandom of="$TMP_FILE" bs=1m count=$COUNT > /dev/null 2>&1
echo "DONE"
printf "INFO: generating shasum... "
SHASUM=`shasum "$TMP_FILE" | cut -d\  -f 1`
echo "DONE"
echo "INFO: shasum is: $SHASUM"

# burn it to the other device
echo "INFO: beginning burn (at $(date))... "
pv < "$TMP_FILE" > "$1/$FILE"
echo "INFO: burn finished (at $(date))."

# checksum the remote file
printf "INFO: generating shasum for new file... "
NEWSUM=`shasum "$1/$FILE" | cut -d\  -f 1`
echo "DONE"
echo "INFO: shasum for new file is: $NEWSUM"

# validate the checksums match
if [ $SHASUM == $NEWSUM ] ; then
	echo "INFO: checksums match, your device is probably OK."
else
	echo "INFO: checksums do NOT match, check your device!"
fi

# clean up
printf "INFO: removing test files... "
rm "$TMP_FILE"
rm "$1/$FILE"
echo "DONE"

echo "INFO: drivecheck has finished."

