#!/usr/bin/env perl
########10########20########30## DOCUMENTATION #50########60########70########80
#
#  OVERVIEW
#  ========
#  
#  This script reads in 1 or more PCRE compliant regular expressions, newline
#  delimited from standard in.
#  
#  For each regex...
#  
#    * produce a random number from 0 to 100, if it is greater than n, skip
#      processing this line. Thus, if n is 50, half of all inputs will be
#      discarded. If n is 100, no inputs will be discarded.
#      
#    * for each remaining input line, generate a random string which is valid
#      for the given regex, called v[k] for the kth input line
#      
#    * produce a string s with length l containing all elements in v
#      concatenated, and separated by x characters of random padding such that
#      m=(l+x)/l => x = l(m - 1). The resulting s is output to stdout. 
#      
#  Further, on standard error, the following is output:
#   
#    * for each element in v, the regex (input line) and the generated string,
#      separated by a tab character, terminated with a newline
#      
#  USAGE
#  =====
#  
#  $1 . . . . keep rate n (0 < n <= 100)
#  
#  $2 . . . . padding factor m (0 < m < 2^32-1)
#  
#  stdin  . . newline delimited, PCRE compliant regular expressions
#  
#  DEPENDANCIES
#  ============
#  
#  String::Random
#  
########10########20########30##### LICENSE ####50########60########70########80
# Copyright (c) 2017, Charles Daniels
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, 
# this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice, 
# this list of conditions and the following disclaimer in the documentation 
# and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its 
# contributors may be used to endorse or promote products derived from this 
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
########10########20########30########40########50########60########70########80

use String::Random;
use strict;
use warnings;

my $n = shift @ARGV;
my $m = shift @ARGV;
my @v;

my $strgen = String::Random->new;
foreach my $line ( <STDIN> ) {
  chomp $line;
  my $rnum = rand(100);
  if ($rnum gt $n){
    # discard this input line by doing nothing
  } else {
    my $v_k =  $strgen->randregex($line);
    push @v, $v_k;
    print STDERR "$line\t$v_k";
  }
}

print STDOUT "v: @v";
